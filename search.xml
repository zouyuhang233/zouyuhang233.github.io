<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>计算机应用22302</title>
      <link href="/2023/01/03/2023-1-3-%E9%82%B9%E5%AE%87%E8%88%AA%E7%AC%AC%E4%B8%80%E6%AC%A1%E8%AE%B0%E5%BD%95-%E5%89%AF%E6%9C%AC-%E5%89%AF%E6%9C%AC/"/>
      <url>/2023/01/03/2023-1-3-%E9%82%B9%E5%AE%87%E8%88%AA%E7%AC%AC%E4%B8%80%E6%AC%A1%E8%AE%B0%E5%BD%95-%E5%89%AF%E6%9C%AC-%E5%89%AF%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h2 id="新年快乐"><a href="#新年快乐" class="headerlink" title="新年快乐"></a>新年快乐</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>关于node运行环境</title>
      <link href="/2023/01/03/2023-1-3-%E9%82%B9%E5%AE%87%E8%88%AA%E7%AC%AC%E4%B8%80%E6%AC%A1%E8%AE%B0%E5%BD%95/"/>
      <url>/2023/01/03/2023-1-3-%E9%82%B9%E5%AE%87%E8%88%AA%E7%AC%AC%E4%B8%80%E6%AC%A1%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h2 id="req请求对象"><a href="#req请求对象" class="headerlink" title="req请求对象"></a>req请求对象</h2><p>只要服务器接收到了客户端的请求，就会调用server.on（）为服务器绑定的request事件处理函数<br>如果想在事件处理函数中，访问与客户端相关的数据或属性，可以使用如下的方式：</p><p>server.on(‘request’,(req,res)&#x3D;&gt;{<br>&#x2F;&#x2F;req是请求对象，它包含了与客户端相关的数据和属性，例如：<br>&#x2F;&#x2F;req.url是客户端相关的数据和属性，例如：<br>&#x2F;&#x2F;req.url是客户端请求的url地址<br>&#x2F;&#x2F;req.method 是客户端的method请求类型<br>const str&#x3D;’Your request url is ${req.url},and request method is ${req.method}’<br>console.log(str)<br>}）<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>4.4 res响应对象<br>server.on(‘request’,(req,res)&#x3D;&gt;{<br>&#x2F;&#x2F;res是响应对象，它包含了与服务器相关的数据和属性，例如：<br>&#x2F;&#x2F;要发送到客户端的字符串<br>const str&#x3D;’Your request url is ${req.url},and request method is ${req.method}’<br>&#x2F;&#x2F;res.end()方法的调用：<br>&#x2F;&#x2F;向客户端发送指定内容，并结束这次请求的处理过程<br>res.end(str)<br>}）<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>4.5解决中文乱码问题<br>当调用res.end()方法，向客户端发送中文内容的时候，会出现乱码问题，此时，需要手动设置内容的编码格式</p><p>server.on(‘request’,(req,res)&#x3D;&gt;{<br>&#x2F;&#x2F;发送的内容包含中文<br>conststr&#x3D;’您请求的url地址是${req.url},请求的method类型是${req.method}’<br>&#x2F;&#x2F;为了防止中文显示乱码的问题，需要设置响应头<br>res.setHeader(‘Content-Type’,’text&#x2F;html;charset&#x3D;utf-8’)<br>&#x2F;&#x2F;把包含中文的内容，响应给客户端<br>res.end(str)<br>})<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>4.6根据不同的url响应不同的html内容<br>server.on(‘request’,function(req,res){<br>const url &#x3D;req.url &#x2F;&#x2F;1.获取请求的Url地址<br>let content &#x3D;’<h1>404 Not found!</h1>‘&#x2F;&#x2F;2.设置默认的内容<br>if(url&#x3D;&#x3D;’&#x2F;‘||url &#x3D;&#x3D;&#x3D;’&#x2F;index.html’){<br>content&#x3D;’<h1>首页</h1>‘&#x2F;&#x2F;3.用户请求的是首页<br>}else if(url&#x3D;&#x3D;&#x3D;’&#x2F;about.html’){<br>content&#x3D;’<h1>关于页面</h1>‘<br>}<br>&#x2F;&#x2F;为了防止中文显示乱码的问题，需要设置响应头<br>res.setHeader(‘Content-Type’,’text&#x2F;html;charset&#x3D;utf-8’)<br>&#x2F;&#x2F;把包含中文的内容，响应给客户端<br>res.end(str)<br>})<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>5.模块化<br>5.1 模块化的基本概念<br>什么是模块化？<br>模块化是指解决一个复杂问题时，自顶向下逐层把系统划分为若干模块的过程。对于整个系统来说，模块是可组合、分解和变换的单元<br>编程领域中的模块化：就是遵守固定的规则，把一个大文件拆成独立并且互相依赖的多个小模块。<br>模块化规范<br>就是对代码进行模块化的拆分与组合时，需要遵守的规则<br>使用什么样的语法格式来引用模块<br>在模块中使用什么样的语法格式向外暴露成员</p><p>5.2Node.js中的模块化<br>根据模块来源的不同，将模块分为了三大类，分别是：<br>内置模块（fs，path，http）<br>自定义模块（用户创建的每个Js文件）<br>第三方模块（由第三方开发出来的模块）</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>学习目标</title>
      <link href="/2023/01/03/2023-1-3-%E9%82%B9%E5%AE%87%E8%88%AA%E7%AC%AC%E4%B8%80%E6%AC%A1%E8%AE%B0%E5%BD%95-%E5%89%AF%E6%9C%AC-%E5%89%AF%E6%9C%AC-2/"/>
      <url>/2023/01/03/2023-1-3-%E9%82%B9%E5%AE%87%E8%88%AA%E7%AC%AC%E4%B8%80%E6%AC%A1%E8%AE%B0%E5%BD%95-%E5%89%AF%E6%9C%AC-%E5%89%AF%E6%9C%AC-2/</url>
      
        <content type="html"><![CDATA[<h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><h2 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h2><h2 id="ajax"><a href="#ajax" class="headerlink" title="ajax"></a>ajax</h2><h2 id="node-js"><a href="#node-js" class="headerlink" title="node.js"></a>node.js</h2><h2 id="ES6"><a href="#ES6" class="headerlink" title="ES6"></a>ES6</h2><h2 id="vue"><a href="#vue" class="headerlink" title="vue"></a>vue</h2><h2 id="java"><a href="#java" class="headerlink" title="java"></a>java</h2><h2 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h2><h2 id="java-web"><a href="#java-web" class="headerlink" title="java web"></a>java web</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>新年快乐</title>
      <link href="/2023/01/03/2023-1-3-%E9%82%B9%E5%AE%87%E8%88%AA%E7%AC%AC%E4%B8%80%E6%AC%A1%E8%AE%B0%E5%BD%95-%E5%89%AF%E6%9C%AC/"/>
      <url>/2023/01/03/2023-1-3-%E9%82%B9%E5%AE%87%E8%88%AA%E7%AC%AC%E4%B8%80%E6%AC%A1%E8%AE%B0%E5%BD%95-%E5%89%AF%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h2 id="段涛有点胖"><a href="#段涛有点胖" class="headerlink" title="段涛有点胖"></a>段涛有点胖</h2>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
